{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vtito\\\\PycharmProjects\\\\weather_app\\\\weather_app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { useState } from 'react';\nimport { useRef } from 'react';\nimport { useEffect } from 'react';\nimport WeatherItem from './components/WeatherItem/WeatherItem';\nimport WeatherItemTemp from './components/WeatherItem/WeatherItemTemp';\nimport WeatherItemMaxMin from './components/WeatherItem/WeatherItemMaxMin';\nimport WeatherItemPressure from './components/WeatherItem/WeatherItemPressure';\nimport WeatherItemWind from './components/WeatherItem/WeatherItemWind';\nimport Title from './components/Title/Title'; // import WeatherMap from './components/WeatherMap/WeatherMap';\n\nimport 'leaflet/dist/leaflet.css';\nimport classes from './components/WeatherMap/WeatherMap.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let data = {\n    \"coord\": {\n      \"lon\": 30.3364,\n      \"lat\": 53.9139\n    },\n    \"weather\": [{\n      \"id\": 802,\n      \"main\": \"Clouds\",\n      \"description\": \"переменная облачность\",\n      \"icon\": \"03d\"\n    }],\n    \"base\": \"stations\",\n    \"main\": {\n      \"temp\": 21.06,\n      \"feels_like\": 20.27,\n      \"temp_min\": 21.06,\n      \"temp_max\": 21.06,\n      \"pressure\": 1019,\n      \"humidity\": 40\n    },\n    \"visibility\": 10000,\n    \"wind\": {\n      \"speed\": 4,\n      \"deg\": 265\n    },\n    \"clouds\": {\n      \"all\": 40\n    },\n    \"dt\": 1629632677,\n    \"sys\": {\n      \"type\": 1,\n      \"id\": 8938,\n      \"country\": \"BY\",\n      \"sunrise\": 1629600566,\n      \"sunset\": 1629652443\n    },\n    \"timezone\": 10800,\n    \"id\": 625665,\n    \"name\": \"Mogilev\",\n    \"cod\": 200\n  };\n  const [weatherData, setWeatherData] = useState(data);\n  let city = 'Mogilev'; // fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&lang=ru&appid=19c0bee458ab65a261e79f492074b660`)\n  //   .then(response => response.json())\n  //   .then(json => setWeatherData(json)) // потом включить, пока заменим запрос с сервера статичным json\n  // useEffect(() => {\n  //   const L = require('leaflet');\n  //   let current_lat = 53.9139;\n  //   let current_long = 30.3364;\n  //   let current_zoom = 16;\n  //   let center_lat = current_lat;\n  //   let center_long = current_long;\n  //   let center_zoom = current_zoom;\n  //   let map = L.map('map', {\n  //     center: [center_lat, center_long],\n  //     zoom: center_zoom\n  //   });\n  //   L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n  //     attribution: '&copy; <a href=\"https://openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n  //   }).addTo(map);\n  // });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      children: \"@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap')\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        text: city\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Title, {\n        text: \"\\u0421\\u0435\\u0433\\u043E\\u0434\\u043D\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather__items-inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(WeatherItemMaxMin, {\n            temp_min: weatherData.main.temp_min,\n            temp_max: weatherData.main.temp_max\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(WeatherItemPressure, {\n            pressure: weatherData.main.pressure\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(WeatherItemTemp, {\n            temp: weatherData.main.temp,\n            desc: weatherData.weather[0].description,\n            image: weatherData.weather[0].icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(WeatherItemWind, {\n            wind_speed: weatherData.wind.speed,\n            wind_deg: weatherData.wind.deg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(WeatherMap, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"FdY9DYY+RE8Sf/+3GFSTMu7cN6o=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/vtito/PycharmProjects/weather_app/weather_app/src/App.js"],"names":["useState","useRef","useEffect","WeatherItem","WeatherItemTemp","WeatherItemMaxMin","WeatherItemPressure","WeatherItemWind","Title","classes","App","data","weatherData","setWeatherData","city","main","temp_min","temp_max","pressure","temp","weather","description","icon","wind","speed","deg"],"mappings":";;;;AACA,OAAO,WAAP;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,MAAT,QAAuB,OAAvB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,WAAP,MAAwB,sCAAxB;AACA,OAAOC,eAAP,MAA4B,0CAA5B;AACA,OAAOC,iBAAP,MAA8B,4CAA9B;AACA,OAAOC,mBAAP,MAAgC,8CAAhC;AACA,OAAOC,eAAP,MAA4B,0CAA5B;AACA,OAAOC,KAAP,MAAkB,0BAAlB,C,CACA;;AACA,OAAO,0BAAP;AACA,OAAOC,OAAP,MAAoB,+CAApB;;;AAIA,SAASC,GAAT,GAAe;AAAA;;AACb,MAAIC,IAAI,GAAG;AACT,aAAS;AACP,aAAO,OADA;AAEP,aAAO;AAFA,KADA;AAKT,eAAW,CACT;AACE,YAAM,GADR;AAEE,cAAQ,QAFV;AAGE,qBAAe,uBAHjB;AAIE,cAAQ;AAJV,KADS,CALF;AAaT,YAAQ,UAbC;AAcT,YAAQ;AACN,cAAQ,KADF;AAEN,oBAAc,KAFR;AAGN,kBAAY,KAHN;AAIN,kBAAY,KAJN;AAKN,kBAAY,IALN;AAMN,kBAAY;AANN,KAdC;AAsBT,kBAAc,KAtBL;AAuBT,YAAQ;AACN,eAAS,CADH;AAEN,aAAO;AAFD,KAvBC;AA2BT,cAAU;AACR,aAAO;AADC,KA3BD;AA8BT,UAAM,UA9BG;AA+BT,WAAO;AACL,cAAQ,CADH;AAEL,YAAM,IAFD;AAGL,iBAAW,IAHN;AAIL,iBAAW,UAJN;AAKL,gBAAU;AALL,KA/BE;AAsCT,gBAAY,KAtCH;AAuCT,UAAM,MAvCG;AAwCT,YAAQ,SAxCC;AAyCT,WAAO;AAzCE,GAAX;AA2CA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAACW,IAAD,CAA9C;AACA,MAAIG,IAAI,GAAG,SAAX,CA7Ca,CA8Cb;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAEA;AAAb;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,gCACE;AAAA,kCACE,QAAC,iBAAD;AAAmB,YAAA,QAAQ,EAAEF,WAAW,CAACG,IAAZ,CAAiBC,QAA9C;AAAwD,YAAA,QAAQ,EAAEJ,WAAW,CAACG,IAAZ,CAAiBE;AAAnF;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,mBAAD;AAAqB,YAAA,QAAQ,EAAEL,WAAW,CAACG,IAAZ,CAAiBG;AAAhD;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE;AAAA,kCACE,QAAC,eAAD;AAAiB,YAAA,IAAI,EAAEN,WAAW,CAACG,IAAZ,CAAiBI,IAAxC;AAA8C,YAAA,IAAI,EAAEP,WAAW,CAACQ,OAAZ,CAAoB,CAApB,EAAuBC,WAA3E;AAAwF,YAAA,KAAK,EAAET,WAAW,CAACQ,OAAZ,CAAoB,CAApB,EAAuBE;AAAtH;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,eAAD;AAAiB,YAAA,UAAU,EAAEV,WAAW,CAACW,IAAZ,CAAiBC,KAA9C;AAAqD,YAAA,QAAQ,EAAEZ,WAAW,CAACW,IAAZ,CAAiBE;AAAhF;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eASE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GA1FQf,G;;KAAAA,G;AA4FT,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\r\nimport './App.css';\r\nimport { useState } from 'react';\r\nimport { useRef } from 'react';\r\nimport { useEffect } from 'react';\r\nimport WeatherItem from './components/WeatherItem/WeatherItem';\r\nimport WeatherItemTemp from './components/WeatherItem/WeatherItemTemp';\r\nimport WeatherItemMaxMin from './components/WeatherItem/WeatherItemMaxMin';\r\nimport WeatherItemPressure from './components/WeatherItem/WeatherItemPressure';\r\nimport WeatherItemWind from './components/WeatherItem/WeatherItemWind';\r\nimport Title from './components/Title/Title';\r\n// import WeatherMap from './components/WeatherMap/WeatherMap';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport classes from './components/WeatherMap/WeatherMap.module.css'\r\n\r\n\r\n\r\nfunction App() {\r\n  let data = {\r\n    \"coord\": {\r\n      \"lon\": 30.3364,\r\n      \"lat\": 53.9139\r\n    },\r\n    \"weather\": [\r\n      {\r\n        \"id\": 802,\r\n        \"main\": \"Clouds\",\r\n        \"description\": \"переменная облачность\",\r\n        \"icon\": \"03d\"\r\n      }\r\n    ],\r\n    \"base\": \"stations\",\r\n    \"main\": {\r\n      \"temp\": 21.06,\r\n      \"feels_like\": 20.27,\r\n      \"temp_min\": 21.06,\r\n      \"temp_max\": 21.06,\r\n      \"pressure\": 1019,\r\n      \"humidity\": 40\r\n    },\r\n    \"visibility\": 10000,\r\n    \"wind\": {\r\n      \"speed\": 4,\r\n      \"deg\": 265\r\n    },\r\n    \"clouds\": {\r\n      \"all\": 40\r\n    },\r\n    \"dt\": 1629632677,\r\n    \"sys\": {\r\n      \"type\": 1,\r\n      \"id\": 8938,\r\n      \"country\": \"BY\",\r\n      \"sunrise\": 1629600566,\r\n      \"sunset\": 1629652443\r\n    },\r\n    \"timezone\": 10800,\r\n    \"id\": 625665,\r\n    \"name\": \"Mogilev\",\r\n    \"cod\": 200\r\n  }\r\n  const [weatherData, setWeatherData] = useState(data);\r\n  let city = 'Mogilev'\r\n  // fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&lang=ru&appid=19c0bee458ab65a261e79f492074b660`)\r\n  //   .then(response => response.json())\r\n  //   .then(json => setWeatherData(json)) // потом включить, пока заменим запрос с сервера статичным json\r\n\r\n\r\n  // useEffect(() => {\r\n  //   const L = require('leaflet');\r\n  //   let current_lat = 53.9139;\r\n  //   let current_long = 30.3364;\r\n  //   let current_zoom = 16;\r\n  //   let center_lat = current_lat;\r\n  //   let center_long = current_long;\r\n  //   let center_zoom = current_zoom;\r\n  //   let map = L.map('map', {\r\n  //     center: [center_lat, center_long],\r\n  //     zoom: center_zoom\r\n  //   });\r\n  //   L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\r\n  //     attribution: '&copy; <a href=\"https://openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n  //   }).addTo(map);\r\n  // });\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <style>@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap')</style>\r\n      <div className=\"container\">\r\n        <Title text={city}></Title>\r\n        <Title text=\"Сегодня\"></Title>\r\n        <div className=\"weather__items-inner\">\r\n          <div>\r\n            <WeatherItemMaxMin temp_min={weatherData.main.temp_min} temp_max={weatherData.main.temp_max}></WeatherItemMaxMin>\r\n            <WeatherItemPressure pressure={weatherData.main.pressure}></WeatherItemPressure>\r\n          </div>\r\n          <div>\r\n            <WeatherItemTemp temp={weatherData.main.temp} desc={weatherData.weather[0].description} image={weatherData.weather[0].icon}></WeatherItemTemp>\r\n            <WeatherItemWind wind_speed={weatherData.wind.speed} wind_deg={weatherData.wind.deg}></WeatherItemWind>\r\n          </div>\r\n          <WeatherMap></WeatherMap>\r\n          {/* <div className={classes.weatherMap} id=\"map\"></div> */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}