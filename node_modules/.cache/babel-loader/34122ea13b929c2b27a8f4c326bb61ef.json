{"ast":null,"code":"import _slicedToArray from \"C:/Users/vtito/PycharmProjects/weather_app/weather_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\vtito\\\\PycharmProjects\\\\weather_app\\\\weather_app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport WeatherItemTemp from './components/WeatherItem/WeatherItemTemp';\nimport WeatherItemPressure from './components/WeatherItem/WeatherItemPressure';\nimport WeatherItemWind from './components/WeatherItem/WeatherItemWind';\nimport WeatherMap from \"./components/WeatherMap/WeatherMap\";\nimport Title from './components/Title/Title';\nimport 'leaflet/dist/leaflet.css';\nimport Bar from \"./components/Bar/Bar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar WEATHER_APP_TOKEN = process.env.REACT_APP_WEATHER_APP_TOKEN;\n\nfunction App() {\n  _s();\n\n  var data = {\n    \"coord\": {\n      \"lon\": 30.3364,\n      \"lat\": 53.9139\n    },\n    \"weather\": [{\n      \"id\": 802,\n      \"main\": \"Clouds\",\n      \"description\": \"переменная облачность\",\n      \"icon\": \"03d\"\n    }],\n    \"base\": \"stations\",\n    \"main\": {\n      \"temp\": 21.06,\n      \"feels_like\": 20.27,\n      \"temp_min\": 21.06,\n      \"temp_max\": 21.06,\n      \"pressure\": 1019,\n      \"humidity\": 40\n    },\n    \"visibility\": 10000,\n    \"wind\": {\n      \"speed\": 4,\n      \"deg\": 265\n    },\n    \"clouds\": {\n      \"all\": 40\n    },\n    \"dt\": 1629632677,\n    \"sys\": {\n      \"type\": 1,\n      \"id\": 8938,\n      \"country\": \"BY\",\n      \"sunrise\": 1629600566,\n      \"sunset\": 1629652443\n    },\n    \"timezone\": 10800,\n    \"id\": 625665,\n    \"name\": \"Mogilev\",\n    \"cod\": 200\n  };\n  var city = 'Mogilev';\n\n  var _useState = useState(data),\n      _useState2 = _slicedToArray(_useState, 2),\n      weatherData = _useState2[0],\n      setWeatherData = _useState2[1];\n\n  var _useState3 = useState([weatherData.coord.lat, weatherData.coord.lon]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      coords = _useState4[0],\n      setCoords = _useState4[1];\n\n  var _useState5 = useState('Mogilev'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      cityValue = _useState6[0],\n      setCityValue = _useState6[1];\n\n  function update_data(cityValue) {\n    console.log(\"update_data \".concat(cityValue));\n    console.log('Click!');\n    fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\".concat(cityValue, \"&units=metric&lang=ru&appid=\").concat(WEATHER_APP_TOKEN)).then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      return setWeatherData(json);\n    });\n    setCoords([weatherData.coord.lat, weatherData.coord.lon]);\n    console.log(\"update_data \".concat(coords));\n  }\n\n  useEffect(function (coords) {\n    console.log(\"Effect \".concat(coords));\n  });\n  console.log('render App...');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar navbar-light bg-light\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"navbar-brand\",\n          children: \"Weather\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          city: cityValue,\n          cityChange: setCityValue,\n          submit: update_data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          text: cityValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Title, {\n          text: \"\\u0421\\u0435\\u0433\\u043E\\u0434\\u043D\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-items__wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather__items-inner\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(WeatherItemPressure, {\n                pressure: weatherData.main.pressure,\n                city: weatherData.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(WeatherItemTemp, {\n                temp: weatherData.main.temp,\n                desc: weatherData.weather[0].description,\n                image: weatherData.weather[0].icon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(WeatherItemWind, {\n                wind_speed: weatherData.wind.speed,\n                wind_deg: weatherData.wind.deg\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(WeatherMap, {\n            coords: coords\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"sx2mWIyzefoulM7HI3cp2k8oZ8s=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/vtito/PycharmProjects/weather_app/weather_app/src/App.js"],"names":["useEffect","useState","WeatherItemTemp","WeatherItemPressure","WeatherItemWind","WeatherMap","Title","Bar","WEATHER_APP_TOKEN","process","env","REACT_APP_WEATHER_APP_TOKEN","App","data","city","weatherData","setWeatherData","coord","lat","lon","coords","setCoords","cityValue","setCityValue","update_data","console","log","fetch","then","response","json","main","pressure","name","temp","weather","description","icon","wind","speed","deg"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\r\nimport './App.css';\r\nimport {useEffect, useState} from 'react';\r\nimport WeatherItemTemp from './components/WeatherItem/WeatherItemTemp';\r\nimport WeatherItemPressure from './components/WeatherItem/WeatherItemPressure';\r\nimport WeatherItemWind from './components/WeatherItem/WeatherItemWind';\r\nimport WeatherMap from \"./components/WeatherMap/WeatherMap\";\r\nimport Title from './components/Title/Title';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport Bar from \"./components/Bar/Bar\";\r\n\r\nconst WEATHER_APP_TOKEN = process.env.REACT_APP_WEATHER_APP_TOKEN\r\n\r\nfunction App() {\r\n    let data = {\r\n        \"coord\": {\r\n            \"lon\": 30.3364,\r\n            \"lat\": 53.9139\r\n        },\r\n        \"weather\": [\r\n            {\r\n                \"id\": 802,\r\n                \"main\": \"Clouds\",\r\n                \"description\": \"переменная облачность\",\r\n                \"icon\": \"03d\"\r\n            }\r\n        ],\r\n        \"base\": \"stations\",\r\n        \"main\": {\r\n            \"temp\": 21.06,\r\n            \"feels_like\": 20.27,\r\n            \"temp_min\": 21.06,\r\n            \"temp_max\": 21.06,\r\n            \"pressure\": 1019,\r\n            \"humidity\": 40\r\n        },\r\n        \"visibility\": 10000,\r\n        \"wind\": {\r\n            \"speed\": 4,\r\n            \"deg\": 265\r\n        },\r\n        \"clouds\": {\r\n            \"all\": 40\r\n        },\r\n        \"dt\": 1629632677,\r\n        \"sys\": {\r\n            \"type\": 1,\r\n            \"id\": 8938,\r\n            \"country\": \"BY\",\r\n            \"sunrise\": 1629600566,\r\n            \"sunset\": 1629652443\r\n        },\r\n        \"timezone\": 10800,\r\n        \"id\": 625665,\r\n        \"name\": \"Mogilev\",\r\n        \"cod\": 200\r\n    }\r\n    let city = 'Mogilev'\r\n\r\n    const [weatherData, setWeatherData] = useState(data);\r\n    const [coords, setCoords] = useState([weatherData.coord.lat, weatherData.coord.lon])\r\n    const [cityValue, setCityValue] = useState('Mogilev')\r\n\r\n    function update_data(cityValue) {\r\n        console.log(`update_data ${cityValue}`)\r\n        console.log('Click!')\r\n        fetch(`http://api.openweathermap.org/data/2.5/weather?q=${cityValue}&units=metric&lang=ru&appid=${WEATHER_APP_TOKEN}`)\r\n            .then(response => response.json())\r\n            .then(json => setWeatherData(json));\r\n        setCoords([weatherData.coord.lat, weatherData.coord.lon])\r\n        console.log(`update_data ${coords}`)\r\n\r\n    }\r\n\r\n\r\n    useEffect((coords) => {\r\n        console.log(`Effect ${coords}`)\r\n    })\r\n\r\n    console.log('render App...')\r\n    return (\r\n        <div className=\"App\">\r\n            <nav className=\"navbar navbar-light bg-light\">\r\n                <div className=\"container-fluid\">\r\n                    <a className=\"navbar-brand\">Weather</a>\r\n                    <Bar city={cityValue} cityChange={setCityValue} submit={update_data}/>\r\n                </div>\r\n            </nav>\r\n            <div className=\"content\">\r\n                <div className=\"container\">\r\n                    <Title text={cityValue}/>\r\n                    <Title text=\"Сегодня\"/>\r\n                    <div className=\"weather-items__wrapper\">\r\n                        <div className=\"weather__items-inner\">\r\n                            <div>\r\n                                <WeatherItemPressure pressure={weatherData.main.pressure} city={weatherData.name}/>\r\n                                <WeatherItemTemp temp={weatherData.main.temp} desc={weatherData.weather[0].description}\r\n                                                 image={weatherData.weather[0].icon}/>\r\n                                <WeatherItemWind wind_speed={weatherData.wind.speed}\r\n                                                 wind_deg={weatherData.wind.deg}/>\r\n                            </div>\r\n                        </div>\r\n                        <WeatherMap coords={coords}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n"]},"metadata":{},"sourceType":"module"}