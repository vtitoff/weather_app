{"ast":null,"code":"import { Point } from '../geometry/Point';\nimport * as Util from '../core/Util';\nimport * as Browser from '../core/Browser';\nimport { addPointerListener, removePointerListener } from './DomEvent.Pointer';\nimport { addDoubleTapListener, removeDoubleTapListener } from './DomEvent.DoubleTap';\nimport { getScale } from './DomUtil';\n/*\r\n * @namespace DomEvent\r\n * Utility functions to work with the [DOM events](https://developer.mozilla.org/docs/Web/API/Event), used by Leaflet internally.\r\n */\n// Inspired by John Resig, Dean Edwards and YUI addEvent implementations.\n// @function on(el: HTMLElement, types: String, fn: Function, context?: Object): this\n// Adds a listener function (`fn`) to a particular DOM event type of the\n// element `el`. You can optionally specify the context of the listener\n// (object the `this` keyword will point to). You can also pass several\n// space-separated types (e.g. `'click dblclick'`).\n// @alternative\n// @function on(el: HTMLElement, eventMap: Object, context?: Object): this\n// Adds a set of type/listener pairs, e.g. `{click: onClick, mousemove: onMouseMove}`\n\nexport function on(obj, types, fn, context) {\n  if (typeof types === 'object') {\n    for (var type in types) {\n      addOne(obj, type, types[type], fn);\n    }\n  } else {\n    types = Util.splitWords(types);\n\n    for (var i = 0, len = types.length; i < len; i++) {\n      addOne(obj, types[i], fn, context);\n    }\n  }\n\n  return this;\n}\nvar eventsKey = '_leaflet_events'; // @function off(el: HTMLElement, types: String, fn: Function, context?: Object): this\n// Removes a previously added listener function.\n// Note that if you passed a custom context to on, you must pass the same\n// context to `off` in order to remove the listener.\n// @alternative\n// @function off(el: HTMLElement, eventMap: Object, context?: Object): this\n// Removes a set of type/listener pairs, e.g. `{click: onClick, mousemove: onMouseMove}`\n\nexport function off(obj, types, fn, context) {\n  if (typeof types === 'object') {\n    for (var type in types) {\n      removeOne(obj, type, types[type], fn);\n    }\n  } else if (types) {\n    types = Util.splitWords(types);\n\n    for (var i = 0, len = types.length; i < len; i++) {\n      removeOne(obj, types[i], fn, context);\n    }\n  } else {\n    for (var j in obj[eventsKey]) {\n      removeOne(obj, j, obj[eventsKey][j]);\n    }\n\n    delete obj[eventsKey];\n  }\n\n  return this;\n}\n\nfunction browserFiresNativeDblClick() {\n  // See https://github.com/w3c/pointerevents/issues/171\n  if (Browser.pointer) {\n    return !(Browser.edge || Browser.safari);\n  }\n}\n\nvar mouseSubst = {\n  mouseenter: 'mouseover',\n  mouseleave: 'mouseout',\n  wheel: !('onwheel' in window) && 'mousewheel'\n};\n\nfunction addOne(obj, type, fn, context) {\n  var id = type + Util.stamp(fn) + (context ? '_' + Util.stamp(context) : '');\n\n  if (obj[eventsKey] && obj[eventsKey][id]) {\n    return this;\n  }\n\n  var handler = function handler(e) {\n    return fn.call(context || obj, e || window.event);\n  };\n\n  var originalHandler = handler;\n\n  if (Browser.pointer && type.indexOf('touch') === 0) {\n    // Needs DomEvent.Pointer.js\n    addPointerListener(obj, type, handler, id);\n  } else if (Browser.touch && type === 'dblclick' && !browserFiresNativeDblClick()) {\n    addDoubleTapListener(obj, handler, id);\n  } else if ('addEventListener' in obj) {\n    if (type === 'touchstart' || type === 'touchmove' || type === 'wheel' || type === 'mousewheel') {\n      obj.addEventListener(mouseSubst[type] || type, handler, Browser.passiveEvents ? {\n        passive: false\n      } : false);\n    } else if (type === 'mouseenter' || type === 'mouseleave') {\n      handler = function handler(e) {\n        e = e || window.event;\n\n        if (isExternalTarget(obj, e)) {\n          originalHandler(e);\n        }\n      };\n\n      obj.addEventListener(mouseSubst[type], handler, false);\n    } else {\n      obj.addEventListener(type, originalHandler, false);\n    }\n  } else if ('attachEvent' in obj) {\n    obj.attachEvent('on' + type, handler);\n  }\n\n  obj[eventsKey] = obj[eventsKey] || {};\n  obj[eventsKey][id] = handler;\n}\n\nfunction removeOne(obj, type, fn, context) {\n  var id = type + Util.stamp(fn) + (context ? '_' + Util.stamp(context) : ''),\n      handler = obj[eventsKey] && obj[eventsKey][id];\n\n  if (!handler) {\n    return this;\n  }\n\n  if (Browser.pointer && type.indexOf('touch') === 0) {\n    removePointerListener(obj, type, id);\n  } else if (Browser.touch && type === 'dblclick' && !browserFiresNativeDblClick()) {\n    removeDoubleTapListener(obj, id);\n  } else if ('removeEventListener' in obj) {\n    obj.removeEventListener(mouseSubst[type] || type, handler, false);\n  } else if ('detachEvent' in obj) {\n    obj.detachEvent('on' + type, handler);\n  }\n\n  obj[eventsKey][id] = null;\n} // @function stopPropagation(ev: DOMEvent): this\n// Stop the given event from propagation to parent elements. Used inside the listener functions:\n// ```js\n// L.DomEvent.on(div, 'click', function (ev) {\n// \tL.DomEvent.stopPropagation(ev);\n// });\n// ```\n\n\nexport function stopPropagation(e) {\n  if (e.stopPropagation) {\n    e.stopPropagation();\n  } else if (e.originalEvent) {\n    // In case of Leaflet event.\n    e.originalEvent._stopped = true;\n  } else {\n    e.cancelBubble = true;\n  }\n\n  skipped(e);\n  return this;\n} // @function disableScrollPropagation(el: HTMLElement): this\n// Adds `stopPropagation` to the element's `'wheel'` events (plus browser variants).\n\nexport function disableScrollPropagation(el) {\n  addOne(el, 'wheel', stopPropagation);\n  return this;\n} // @function disableClickPropagation(el: HTMLElement): this\n// Adds `stopPropagation` to the element's `'click'`, `'doubleclick'`,\n// `'mousedown'` and `'touchstart'` events (plus browser variants).\n\nexport function disableClickPropagation(el) {\n  on(el, 'mousedown touchstart dblclick', stopPropagation);\n  addOne(el, 'click', fakeStop);\n  return this;\n} // @function preventDefault(ev: DOMEvent): this\n// Prevents the default action of the DOM Event `ev` from happening (such as\n// following a link in the href of the a element, or doing a POST request\n// with page reload when a `<form>` is submitted).\n// Use it inside listener functions.\n\nexport function preventDefault(e) {\n  if (e.preventDefault) {\n    e.preventDefault();\n  } else {\n    e.returnValue = false;\n  }\n\n  return this;\n} // @function stop(ev: DOMEvent): this\n// Does `stopPropagation` and `preventDefault` at the same time.\n\nexport function stop(e) {\n  preventDefault(e);\n  stopPropagation(e);\n  return this;\n} // @function getMousePosition(ev: DOMEvent, container?: HTMLElement): Point\n// Gets normalized mouse position from a DOM event relative to the\n// `container` (border excluded) or to the whole page if not specified.\n\nexport function getMousePosition(e, container) {\n  if (!container) {\n    return new Point(e.clientX, e.clientY);\n  }\n\n  var scale = getScale(container),\n      offset = scale.boundingClientRect; // left and top  values are in page scale (like the event clientX/Y)\n\n  return new Point( // offset.left/top values are in page scale (like clientX/Y),\n  // whereas clientLeft/Top (border width) values are the original values (before CSS scale applies).\n  (e.clientX - offset.left) / scale.x - container.clientLeft, (e.clientY - offset.top) / scale.y - container.clientTop);\n} // Chrome on Win scrolls double the pixels as in other platforms (see #4538),\n// and Firefox scrolls device pixels, not CSS pixels\n\nvar wheelPxFactor = Browser.win && Browser.chrome ? 2 * window.devicePixelRatio : Browser.gecko ? window.devicePixelRatio : 1; // @function getWheelDelta(ev: DOMEvent): Number\n// Gets normalized wheel delta from a wheel DOM event, in vertical\n// pixels scrolled (negative if scrolling down).\n// Events from pointing devices without precise scrolling are mapped to\n// a best guess of 60 pixels.\n\nexport function getWheelDelta(e) {\n  return Browser.edge ? e.wheelDeltaY / 2 : // Don't trust window-geometry-based delta\n  e.deltaY && e.deltaMode === 0 ? -e.deltaY / wheelPxFactor : // Pixels\n  e.deltaY && e.deltaMode === 1 ? -e.deltaY * 20 : // Lines\n  e.deltaY && e.deltaMode === 2 ? -e.deltaY * 60 : // Pages\n  e.deltaX || e.deltaZ ? 0 : // Skip horizontal/depth wheel events\n  e.wheelDelta ? (e.wheelDeltaY || e.wheelDelta) / 2 : // Legacy IE pixels\n  e.detail && Math.abs(e.detail) < 32765 ? -e.detail * 20 : // Legacy Moz lines\n  e.detail ? e.detail / -32765 * 60 : // Legacy Moz pages\n  0;\n}\nvar skipEvents = {};\nexport function fakeStop(e) {\n  // fakes stopPropagation by setting a special event flag, checked/reset with skipped(e)\n  skipEvents[e.type] = true;\n}\nexport function skipped(e) {\n  var events = skipEvents[e.type]; // reset when checking, as it's only used in map container and propagates outside of the map\n\n  skipEvents[e.type] = false;\n  return events;\n} // check if element really left/entered the event target (for mouseenter/mouseleave)\n\nexport function isExternalTarget(el, e) {\n  var related = e.relatedTarget;\n\n  if (!related) {\n    return true;\n  }\n\n  try {\n    while (related && related !== el) {\n      related = related.parentNode;\n    }\n  } catch (err) {\n    return false;\n  }\n\n  return related !== el;\n} // @function addListener(…): this\n// Alias to [`L.DomEvent.on`](#domevent-on)\n\nexport { on as addListener }; // @function removeListener(…): this\n// Alias to [`L.DomEvent.off`](#domevent-off)\n\nexport { off as removeListener };","map":{"version":3,"sources":["C:/Users/vtito/PycharmProjects/weather_app/weather_app/node_modules/leaflet/src/dom/DomEvent.js"],"names":["Point","Util","Browser","addPointerListener","removePointerListener","addDoubleTapListener","removeDoubleTapListener","getScale","on","obj","types","fn","context","type","addOne","splitWords","i","len","length","eventsKey","off","removeOne","j","browserFiresNativeDblClick","pointer","edge","safari","mouseSubst","mouseenter","mouseleave","wheel","window","id","stamp","handler","e","call","event","originalHandler","indexOf","touch","addEventListener","passiveEvents","passive","isExternalTarget","attachEvent","removeEventListener","detachEvent","stopPropagation","originalEvent","_stopped","cancelBubble","skipped","disableScrollPropagation","el","disableClickPropagation","fakeStop","preventDefault","returnValue","stop","getMousePosition","container","clientX","clientY","scale","offset","boundingClientRect","left","x","clientLeft","top","y","clientTop","wheelPxFactor","win","chrome","devicePixelRatio","gecko","getWheelDelta","wheelDeltaY","deltaY","deltaMode","deltaX","deltaZ","wheelDelta","detail","Math","abs","skipEvents","events","related","relatedTarget","parentNode","err","addListener","removeListener"],"mappings":"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","sourcesContent":["import {Point} from '../geometry/Point';\r\nimport * as Util from '../core/Util';\r\nimport * as Browser from '../core/Browser';\r\nimport {addPointerListener, removePointerListener} from './DomEvent.Pointer';\r\nimport {addDoubleTapListener, removeDoubleTapListener} from './DomEvent.DoubleTap';\r\nimport {getScale} from './DomUtil';\r\n\r\n/*\r\n * @namespace DomEvent\r\n * Utility functions to work with the [DOM events](https://developer.mozilla.org/docs/Web/API/Event), used by Leaflet internally.\r\n */\r\n\r\n// Inspired by John Resig, Dean Edwards and YUI addEvent implementations.\r\n\r\n// @function on(el: HTMLElement, types: String, fn: Function, context?: Object): this\r\n// Adds a listener function (`fn`) to a particular DOM event type of the\r\n// element `el`. You can optionally specify the context of the listener\r\n// (object the `this` keyword will point to). You can also pass several\r\n// space-separated types (e.g. `'click dblclick'`).\r\n\r\n// @alternative\r\n// @function on(el: HTMLElement, eventMap: Object, context?: Object): this\r\n// Adds a set of type/listener pairs, e.g. `{click: onClick, mousemove: onMouseMove}`\r\nexport function on(obj, types, fn, context) {\r\n\r\n\tif (typeof types === 'object') {\r\n\t\tfor (var type in types) {\r\n\t\t\taddOne(obj, type, types[type], fn);\r\n\t\t}\r\n\t} else {\r\n\t\ttypes = Util.splitWords(types);\r\n\r\n\t\tfor (var i = 0, len = types.length; i < len; i++) {\r\n\t\t\taddOne(obj, types[i], fn, context);\r\n\t\t}\r\n\t}\r\n\r\n\treturn this;\r\n}\r\n\r\nvar eventsKey = '_leaflet_events';\r\n\r\n// @function off(el: HTMLElement, types: String, fn: Function, context?: Object): this\r\n// Removes a previously added listener function.\r\n// Note that if you passed a custom context to on, you must pass the same\r\n// context to `off` in order to remove the listener.\r\n\r\n// @alternative\r\n// @function off(el: HTMLElement, eventMap: Object, context?: Object): this\r\n// Removes a set of type/listener pairs, e.g. `{click: onClick, mousemove: onMouseMove}`\r\nexport function off(obj, types, fn, context) {\r\n\r\n\tif (typeof types === 'object') {\r\n\t\tfor (var type in types) {\r\n\t\t\tremoveOne(obj, type, types[type], fn);\r\n\t\t}\r\n\t} else if (types) {\r\n\t\ttypes = Util.splitWords(types);\r\n\r\n\t\tfor (var i = 0, len = types.length; i < len; i++) {\r\n\t\t\tremoveOne(obj, types[i], fn, context);\r\n\t\t}\r\n\t} else {\r\n\t\tfor (var j in obj[eventsKey]) {\r\n\t\t\tremoveOne(obj, j, obj[eventsKey][j]);\r\n\t\t}\r\n\t\tdelete obj[eventsKey];\r\n\t}\r\n\r\n\treturn this;\r\n}\r\n\r\nfunction browserFiresNativeDblClick() {\r\n\t// See https://github.com/w3c/pointerevents/issues/171\r\n\tif (Browser.pointer) {\r\n\t\treturn !(Browser.edge || Browser.safari);\r\n\t}\r\n}\r\n\r\nvar mouseSubst = {\r\n\tmouseenter: 'mouseover',\r\n\tmouseleave: 'mouseout',\r\n\twheel: !('onwheel' in window) && 'mousewheel'\r\n};\r\n\r\nfunction addOne(obj, type, fn, context) {\r\n\tvar id = type + Util.stamp(fn) + (context ? '_' + Util.stamp(context) : '');\r\n\r\n\tif (obj[eventsKey] && obj[eventsKey][id]) { return this; }\r\n\r\n\tvar handler = function (e) {\r\n\t\treturn fn.call(context || obj, e || window.event);\r\n\t};\r\n\r\n\tvar originalHandler = handler;\r\n\r\n\tif (Browser.pointer && type.indexOf('touch') === 0) {\r\n\t\t// Needs DomEvent.Pointer.js\r\n\t\taddPointerListener(obj, type, handler, id);\r\n\r\n\t} else if (Browser.touch && (type === 'dblclick') && !browserFiresNativeDblClick()) {\r\n\t\taddDoubleTapListener(obj, handler, id);\r\n\r\n\t} else if ('addEventListener' in obj) {\r\n\r\n\t\tif (type === 'touchstart' || type === 'touchmove' || type === 'wheel' ||  type === 'mousewheel') {\r\n\t\t\tobj.addEventListener(mouseSubst[type] || type, handler, Browser.passiveEvents ? {passive: false} : false);\r\n\r\n\t\t} else if (type === 'mouseenter' || type === 'mouseleave') {\r\n\t\t\thandler = function (e) {\r\n\t\t\t\te = e || window.event;\r\n\t\t\t\tif (isExternalTarget(obj, e)) {\r\n\t\t\t\t\toriginalHandler(e);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tobj.addEventListener(mouseSubst[type], handler, false);\r\n\r\n\t\t} else {\r\n\t\t\tobj.addEventListener(type, originalHandler, false);\r\n\t\t}\r\n\r\n\t} else if ('attachEvent' in obj) {\r\n\t\tobj.attachEvent('on' + type, handler);\r\n\t}\r\n\r\n\tobj[eventsKey] = obj[eventsKey] || {};\r\n\tobj[eventsKey][id] = handler;\r\n}\r\n\r\nfunction removeOne(obj, type, fn, context) {\r\n\r\n\tvar id = type + Util.stamp(fn) + (context ? '_' + Util.stamp(context) : ''),\r\n\t    handler = obj[eventsKey] && obj[eventsKey][id];\r\n\r\n\tif (!handler) { return this; }\r\n\r\n\tif (Browser.pointer && type.indexOf('touch') === 0) {\r\n\t\tremovePointerListener(obj, type, id);\r\n\r\n\t} else if (Browser.touch && (type === 'dblclick') && !browserFiresNativeDblClick()) {\r\n\t\tremoveDoubleTapListener(obj, id);\r\n\r\n\t} else if ('removeEventListener' in obj) {\r\n\r\n\t\tobj.removeEventListener(mouseSubst[type] || type, handler, false);\r\n\r\n\t} else if ('detachEvent' in obj) {\r\n\t\tobj.detachEvent('on' + type, handler);\r\n\t}\r\n\r\n\tobj[eventsKey][id] = null;\r\n}\r\n\r\n// @function stopPropagation(ev: DOMEvent): this\r\n// Stop the given event from propagation to parent elements. Used inside the listener functions:\r\n// ```js\r\n// L.DomEvent.on(div, 'click', function (ev) {\r\n// \tL.DomEvent.stopPropagation(ev);\r\n// });\r\n// ```\r\nexport function stopPropagation(e) {\r\n\r\n\tif (e.stopPropagation) {\r\n\t\te.stopPropagation();\r\n\t} else if (e.originalEvent) {  // In case of Leaflet event.\r\n\t\te.originalEvent._stopped = true;\r\n\t} else {\r\n\t\te.cancelBubble = true;\r\n\t}\r\n\tskipped(e);\r\n\r\n\treturn this;\r\n}\r\n\r\n// @function disableScrollPropagation(el: HTMLElement): this\r\n// Adds `stopPropagation` to the element's `'wheel'` events (plus browser variants).\r\nexport function disableScrollPropagation(el) {\r\n\taddOne(el, 'wheel', stopPropagation);\r\n\treturn this;\r\n}\r\n\r\n// @function disableClickPropagation(el: HTMLElement): this\r\n// Adds `stopPropagation` to the element's `'click'`, `'doubleclick'`,\r\n// `'mousedown'` and `'touchstart'` events (plus browser variants).\r\nexport function disableClickPropagation(el) {\r\n\ton(el, 'mousedown touchstart dblclick', stopPropagation);\r\n\taddOne(el, 'click', fakeStop);\r\n\treturn this;\r\n}\r\n\r\n// @function preventDefault(ev: DOMEvent): this\r\n// Prevents the default action of the DOM Event `ev` from happening (such as\r\n// following a link in the href of the a element, or doing a POST request\r\n// with page reload when a `<form>` is submitted).\r\n// Use it inside listener functions.\r\nexport function preventDefault(e) {\r\n\tif (e.preventDefault) {\r\n\t\te.preventDefault();\r\n\t} else {\r\n\t\te.returnValue = false;\r\n\t}\r\n\treturn this;\r\n}\r\n\r\n// @function stop(ev: DOMEvent): this\r\n// Does `stopPropagation` and `preventDefault` at the same time.\r\nexport function stop(e) {\r\n\tpreventDefault(e);\r\n\tstopPropagation(e);\r\n\treturn this;\r\n}\r\n\r\n// @function getMousePosition(ev: DOMEvent, container?: HTMLElement): Point\r\n// Gets normalized mouse position from a DOM event relative to the\r\n// `container` (border excluded) or to the whole page if not specified.\r\nexport function getMousePosition(e, container) {\r\n\tif (!container) {\r\n\t\treturn new Point(e.clientX, e.clientY);\r\n\t}\r\n\r\n\tvar scale = getScale(container),\r\n\t    offset = scale.boundingClientRect; // left and top  values are in page scale (like the event clientX/Y)\r\n\r\n\treturn new Point(\r\n\t\t// offset.left/top values are in page scale (like clientX/Y),\r\n\t\t// whereas clientLeft/Top (border width) values are the original values (before CSS scale applies).\r\n\t\t(e.clientX - offset.left) / scale.x - container.clientLeft,\r\n\t\t(e.clientY - offset.top) / scale.y - container.clientTop\r\n\t);\r\n}\r\n\r\n// Chrome on Win scrolls double the pixels as in other platforms (see #4538),\r\n// and Firefox scrolls device pixels, not CSS pixels\r\nvar wheelPxFactor =\r\n\t(Browser.win && Browser.chrome) ? 2 * window.devicePixelRatio :\r\n\tBrowser.gecko ? window.devicePixelRatio : 1;\r\n\r\n// @function getWheelDelta(ev: DOMEvent): Number\r\n// Gets normalized wheel delta from a wheel DOM event, in vertical\r\n// pixels scrolled (negative if scrolling down).\r\n// Events from pointing devices without precise scrolling are mapped to\r\n// a best guess of 60 pixels.\r\nexport function getWheelDelta(e) {\r\n\treturn (Browser.edge) ? e.wheelDeltaY / 2 : // Don't trust window-geometry-based delta\r\n\t       (e.deltaY && e.deltaMode === 0) ? -e.deltaY / wheelPxFactor : // Pixels\r\n\t       (e.deltaY && e.deltaMode === 1) ? -e.deltaY * 20 : // Lines\r\n\t       (e.deltaY && e.deltaMode === 2) ? -e.deltaY * 60 : // Pages\r\n\t       (e.deltaX || e.deltaZ) ? 0 :\t// Skip horizontal/depth wheel events\r\n\t       e.wheelDelta ? (e.wheelDeltaY || e.wheelDelta) / 2 : // Legacy IE pixels\r\n\t       (e.detail && Math.abs(e.detail) < 32765) ? -e.detail * 20 : // Legacy Moz lines\r\n\t       e.detail ? e.detail / -32765 * 60 : // Legacy Moz pages\r\n\t       0;\r\n}\r\n\r\nvar skipEvents = {};\r\n\r\nexport function fakeStop(e) {\r\n\t// fakes stopPropagation by setting a special event flag, checked/reset with skipped(e)\r\n\tskipEvents[e.type] = true;\r\n}\r\n\r\nexport function skipped(e) {\r\n\tvar events = skipEvents[e.type];\r\n\t// reset when checking, as it's only used in map container and propagates outside of the map\r\n\tskipEvents[e.type] = false;\r\n\treturn events;\r\n}\r\n\r\n// check if element really left/entered the event target (for mouseenter/mouseleave)\r\nexport function isExternalTarget(el, e) {\r\n\r\n\tvar related = e.relatedTarget;\r\n\r\n\tif (!related) { return true; }\r\n\r\n\ttry {\r\n\t\twhile (related && (related !== el)) {\r\n\t\t\trelated = related.parentNode;\r\n\t\t}\r\n\t} catch (err) {\r\n\t\treturn false;\r\n\t}\r\n\treturn (related !== el);\r\n}\r\n\r\n// @function addListener(…): this\r\n// Alias to [`L.DomEvent.on`](#domevent-on)\r\nexport {on as addListener};\r\n\r\n// @function removeListener(…): this\r\n// Alias to [`L.DomEvent.off`](#domevent-off)\r\nexport {off as removeListener};\r\n"]},"metadata":{},"sourceType":"module"}