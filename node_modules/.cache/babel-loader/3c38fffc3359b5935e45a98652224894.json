{"ast":null,"code":"import * as Browser from '../core/Browser';\n/*\r\n * Extends the event handling code with double tap support for mobile browsers.\r\n */\n\nvar _touchstart = Browser.msPointer ? 'MSPointerDown' : Browser.pointer ? 'pointerdown' : 'touchstart';\n\nvar _touchend = Browser.msPointer ? 'MSPointerUp' : Browser.pointer ? 'pointerup' : 'touchend';\n\nvar _pre = '_leaflet_'; // inspired by Zepto touch code by Thomas Fuchs\n\nexport function addDoubleTapListener(obj, handler, id) {\n  var last,\n      touch,\n      doubleTap = false,\n      delay = 250;\n\n  function onTouchStart(e) {\n    if (Browser.pointer) {\n      if (!e.isPrimary) {\n        return;\n      }\n\n      if (e.pointerType === 'mouse') {\n        return;\n      } // mouse fires native dblclick\n\n    } else if (e.touches.length > 1) {\n      return;\n    }\n\n    var now = Date.now(),\n        delta = now - (last || now);\n    touch = e.touches ? e.touches[0] : e;\n    doubleTap = delta > 0 && delta <= delay;\n    last = now;\n  }\n\n  function onTouchEnd(e) {\n    if (doubleTap && !touch.cancelBubble) {\n      if (Browser.pointer) {\n        if (e.pointerType === 'mouse') {\n          return;\n        } // work around .type being readonly with MSPointer* events\n\n\n        var newTouch = {},\n            prop,\n            i;\n\n        for (i in touch) {\n          prop = touch[i];\n          newTouch[i] = prop && prop.bind ? prop.bind(touch) : prop;\n        }\n\n        touch = newTouch;\n      }\n\n      touch.type = 'dblclick';\n      touch.button = 0;\n      handler(touch);\n      last = null;\n    }\n  }\n\n  obj[_pre + _touchstart + id] = onTouchStart;\n  obj[_pre + _touchend + id] = onTouchEnd;\n  obj[_pre + 'dblclick' + id] = handler;\n  obj.addEventListener(_touchstart, onTouchStart, Browser.passiveEvents ? {\n    passive: false\n  } : false);\n  obj.addEventListener(_touchend, onTouchEnd, Browser.passiveEvents ? {\n    passive: false\n  } : false); // On some platforms (notably, chrome<55 on win10 + touchscreen + mouse),\n  // the browser doesn't fire touchend/pointerup events but does fire\n  // native dblclicks. See #4127.\n  // Edge 14 also fires native dblclicks, but only for pointerType mouse, see #5180.\n\n  obj.addEventListener('dblclick', handler, false);\n  return this;\n}\nexport function removeDoubleTapListener(obj, id) {\n  var touchstart = obj[_pre + _touchstart + id],\n      touchend = obj[_pre + _touchend + id],\n      dblclick = obj[_pre + 'dblclick' + id];\n  obj.removeEventListener(_touchstart, touchstart, Browser.passiveEvents ? {\n    passive: false\n  } : false);\n  obj.removeEventListener(_touchend, touchend, Browser.passiveEvents ? {\n    passive: false\n  } : false);\n  obj.removeEventListener('dblclick', dblclick, false);\n  return this;\n}","map":{"version":3,"sources":["C:/Users/vtito/PycharmProjects/weather_app/weather_app/node_modules/leaflet/src/dom/DomEvent.DoubleTap.js"],"names":["Browser","_touchstart","msPointer","pointer","_touchend","_pre","addDoubleTapListener","obj","handler","id","last","touch","doubleTap","delay","onTouchStart","e","isPrimary","pointerType","touches","length","now","Date","delta","onTouchEnd","cancelBubble","newTouch","prop","i","bind","type","button","addEventListener","passiveEvents","passive","removeDoubleTapListener","touchstart","touchend","dblclick","removeEventListener"],"mappings":"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","sourcesContent":["import * as Browser from '../core/Browser';\r\n\r\n/*\r\n * Extends the event handling code with double tap support for mobile browsers.\r\n */\r\n\r\nvar _touchstart = Browser.msPointer ? 'MSPointerDown' : Browser.pointer ? 'pointerdown' : 'touchstart';\r\nvar _touchend = Browser.msPointer ? 'MSPointerUp' : Browser.pointer ? 'pointerup' : 'touchend';\r\nvar _pre = '_leaflet_';\r\n\r\n// inspired by Zepto touch code by Thomas Fuchs\r\nexport function addDoubleTapListener(obj, handler, id) {\r\n\tvar last, touch,\r\n\t    doubleTap = false,\r\n\t    delay = 250;\r\n\r\n\tfunction onTouchStart(e) {\r\n\r\n\t\tif (Browser.pointer) {\r\n\t\t\tif (!e.isPrimary) { return; }\r\n\t\t\tif (e.pointerType === 'mouse') { return; } // mouse fires native dblclick\r\n\t\t} else if (e.touches.length > 1) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar now = Date.now(),\r\n\t\t    delta = now - (last || now);\r\n\r\n\t\ttouch = e.touches ? e.touches[0] : e;\r\n\t\tdoubleTap = (delta > 0 && delta <= delay);\r\n\t\tlast = now;\r\n\t}\r\n\r\n\tfunction onTouchEnd(e) {\r\n\t\tif (doubleTap && !touch.cancelBubble) {\r\n\t\t\tif (Browser.pointer) {\r\n\t\t\t\tif (e.pointerType === 'mouse') { return; }\r\n\t\t\t\t// work around .type being readonly with MSPointer* events\r\n\t\t\t\tvar newTouch = {},\r\n\t\t\t\t    prop, i;\r\n\r\n\t\t\t\tfor (i in touch) {\r\n\t\t\t\t\tprop = touch[i];\r\n\t\t\t\t\tnewTouch[i] = prop && prop.bind ? prop.bind(touch) : prop;\r\n\t\t\t\t}\r\n\t\t\t\ttouch = newTouch;\r\n\t\t\t}\r\n\t\t\ttouch.type = 'dblclick';\r\n\t\t\ttouch.button = 0;\r\n\t\t\thandler(touch);\r\n\t\t\tlast = null;\r\n\t\t}\r\n\t}\r\n\r\n\tobj[_pre + _touchstart + id] = onTouchStart;\r\n\tobj[_pre + _touchend + id] = onTouchEnd;\r\n\tobj[_pre + 'dblclick' + id] = handler;\r\n\r\n\tobj.addEventListener(_touchstart, onTouchStart, Browser.passiveEvents ? {passive: false} : false);\r\n\tobj.addEventListener(_touchend, onTouchEnd, Browser.passiveEvents ? {passive: false} : false);\r\n\r\n\t// On some platforms (notably, chrome<55 on win10 + touchscreen + mouse),\r\n\t// the browser doesn't fire touchend/pointerup events but does fire\r\n\t// native dblclicks. See #4127.\r\n\t// Edge 14 also fires native dblclicks, but only for pointerType mouse, see #5180.\r\n\tobj.addEventListener('dblclick', handler, false);\r\n\r\n\treturn this;\r\n}\r\n\r\nexport function removeDoubleTapListener(obj, id) {\r\n\tvar touchstart = obj[_pre + _touchstart + id],\r\n\t    touchend = obj[_pre + _touchend + id],\r\n\t    dblclick = obj[_pre + 'dblclick' + id];\r\n\r\n\tobj.removeEventListener(_touchstart, touchstart, Browser.passiveEvents ? {passive: false} : false);\r\n\tobj.removeEventListener(_touchend, touchend, Browser.passiveEvents ? {passive: false} : false);\r\n\tobj.removeEventListener('dblclick', dblclick, false);\r\n\r\n\treturn this;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}